package com.capgemini.bankapp.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.capgemini.bankapp.exception.BankAccountNotFoundException;
import com.capgemini.bankapp.model.BankAccount;
import com.capgemini.bankapp.service.BankAccountService;

@Controller
@RequestMapping("/BankAccount")
public class BankAppController 
{
	@Autowired
	private BankAccountService service;
	
	@RequestMapping("/home")
	public String homePage() 
	{
		return "index";
	}
	
	@RequestMapping("/home/new-acc")
	public String inputPage() 
	{
		return "new_acc";
	}
	
	@RequestMapping("/new")
	public String addNewBankAccount(@RequestParam("customer_name") String accountHolderName, 
			@RequestParam("account_type") String accountType, @RequestParam("account_balance") double accountBalance) 
	{
		
		service.addNewBankAccount(new BankAccount(accountHolderName,accountType,accountBalance));
		return "Success";

	}
	
	@RequestMapping("/home/Delete")
	public String deletePage() 
	{
		return "Delete";
	}
	
	@RequestMapping("/delete")
	@ExceptionHandler({BankAccountNotFoundException.class})
	public String deleteBankAccount(@RequestParam("account_id") long accountId) throws BankAccountNotFoundException 
	{
		boolean result = service.deleteBankAccount(accountId);
		if(result)
		{
			return "Success";
		}
		else
		{
			throw new BankAccountNotFoundException("Account Not Found");
		}
	}

	@RequestMapping("/home/Checkbal")
	public String checkBalancePage() 
	{
		return "Checkbal";
	}
	
	@RequestMapping("/Checkbal")
	public String checkBalance(@RequestParam("customer_id") long accountId, Model model) 
	{
		try
		{
			double result = service.checkBalance(accountId);
			model.addAttribute("message", "Balance is:"+ result);
		}
		catch (BankAccountNotFoundException e) 
		{
			model.addAttribute("message", e.getMessage());
		}
		return "Success";
	}
	
}
